# HeadlessX Nginx Configuration
# Place this file in /etc/nginx/sites-available/headlessx
# Replace SUBDOMAIN.DOMAIN.COM with your actual domain (e.g., headlessx.yourdomain.com)

server {
    listen 80;
    server_name SUBDOMAIN.DOMAIN.COM;  # Replace with your actual domain
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=burst:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=100r/s;
    
    # Serve website at root
    location / {
        root /var/www/headlessx;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Add cache headers for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API endpoints with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        # Remove /api prefix when forwarding to backend
        rewrite ^/api/(.*)$ /$1 break;
        
        # Proxy settings
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings for large requests (screenshots, PDFs)
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffer settings for large responses
        proxy_buffering off;
        proxy_buffer_size 128k;
        proxy_buffers 100 128k;
        proxy_busy_buffers_size 128k;
        
        # Client settings
        client_max_body_size 10M;
        client_body_timeout 60s;
        client_header_timeout 60s;
    }
    
    # Health check endpoint (minimal rate limiting) - accessed via /api/health
    location /api/health {
        limit_req zone=health burst=50 nodelay;
        
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Status endpoint with higher rate limit - accessed via /api/status
    location /api/status {
        limit_req zone=burst burst=10 nodelay;
        
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Block common attack vectors and bot paths
    location ~ ^/(wp-admin|admin|phpmyadmin|xmlrpc.php|wp-login.php) {
        return 404;
    }
    
    location ~ ^/\.well-known {
        allow all;
    }
    
    location ~ /\. {
        deny all;
    }
    
    # Favicon and robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        return 204;
    }
    
    location = /robots.txt {
        log_not_found off;
        access_log off;
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }
    
    # Security: Hide nginx version and server tokens
    server_tokens off;
    
    # Custom error pages
    error_page 429 /429.html;
    location = /429.html {
        root /var/www/html;
        internal;
    }
}

# SSL configuration will be added automatically by certbot
# when you run: sudo certbot --nginx -d your-subdomain.yourdomain.com

# Additional server block for www redirect (optional)
server {
    listen 80;
    server_name www.your-subdomain.yourdomain.com;
    return 301 $scheme://your-subdomain.yourdomain.com$request_uri;
}