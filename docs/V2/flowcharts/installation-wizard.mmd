```mermaid
%%{init: {'theme':'base', 'themeVariables': { 'primaryColor':'#6366f1','primaryTextColor':'#fff','primaryBorderColor':'#4f46e5','lineColor':'#4f46e5','secondaryColor':'#10b981','tertiaryColor':'#f59e0b'}}}%%

flowchart TD
    Start([User Visits HeadlessX]) --> CheckInstall{Check .installed file}
    
    CheckInstall -->|File EXISTS| RedirectDash[Redirect to /dashboard]
    CheckInstall -->|File NOT EXISTS| ShowInstall[Show /install/system-check]
    
    RedirectDash --> End1([User sees Dashboard])
    
    %% Installation Wizard Flow
    ShowInstall --> Step1[Step 1: System Detection]
    
    Step1 --> DetectOS[🔍 Auto-detect OS]
    DetectOS --> CheckNode[Check Node.js Version]
    CheckNode --> CheckRAM[Check Available RAM]
    CheckRAM --> CheckDisk[Check Disk Space]
    CheckDisk --> CheckPnpm[Check pnpm Installed]
    
    CheckPnpm --> SystemValid{All Requirements Met?}
    
    SystemValid -->|❌ NO| ShowErrors[Display Errors & Fix Instructions]
    ShowErrors --> FixManual{User Fixed Issues?}
    FixManual -->|No| ShowErrors
    FixManual -->|Yes| Step1
    
    SystemValid -->|✅ YES| Step2[Step 2: Configuration]
    
    Step2 --> GenToken[🔐 Auto-generate AUTH_TOKEN]
    GenToken --> InputDomain[User inputs Domain/Subdomain]
    InputDomain --> InputPorts[User chooses Ports]
    InputPorts --> SelectFeatures[User selects Features:<br/>AI, Proxy, Monitoring]
    SelectFeatures --> ValidateConfig{Validate Configuration}
    
    ValidateConfig -->|❌ Invalid| ShowConfigError[Show Validation Errors]
    ShowConfigError --> Step2
    
    ValidateConfig -->|✅ Valid| SaveEnv[💾 Save to .env file]
    SaveEnv --> Step3[Step 3: Dependencies Installation]
    
    Step3 --> CheckPnpmAgain{pnpm Installed?}
    
    CheckPnpmAgain -->|❌ NO| InstallPnpm[📦 npm install -g pnpm]
    CheckPnpmAgain -->|✅ YES| RunPnpmInstall
    InstallPnpm --> PnpmSuccess{Success?}
    
    PnpmSuccess -->|❌ Failed| ShowPnpmError[❌ Show Error + Retry Button]
    ShowPnpmError --> RetryPnpm{Retry?}
    RetryPnpm -->|Yes| InstallPnpm
    RetryPnpm -->|No| AbortInstall[Abort Installation]
    
    PnpmSuccess -->|✅ Success| RunPnpmInstall[pnpm install]
    
    RunPnpmInstall --> WSConnect[🔌 Connect WebSocket /ws/install]
    WSConnect --> StreamLogs[📝 Stream Live Logs to Frontend]
    
    StreamLogs --> InstallPackages[Installing Packages<br/>Progress: 0-100%]
    InstallPackages --> InstallPlaywright[🎭 pnpm exec playwright install]
    InstallPlaywright --> InstallSuccess{Success?}
    
    InstallSuccess -->|❌ Failed| ShowInstError[❌ Show Error + Retry]
    ShowInstError --> RetryInstall{Retry?}
    RetryInstall -->|Yes| RunPnpmInstall
    RetryInstall -->|No| AbortInstall
    
    InstallSuccess -->|✅ Success| Step4[Step 4: Database Setup Optional]
    
    Step4 --> DBChoice{User Choice}
    
    DBChoice -->|Docker Compose| GenDockerCompose[Generate docker-compose.yml]
    GenDockerCompose --> RunDockerCompose[docker-compose up -d]
    RunDockerCompose --> TestDBConnection
    
    DBChoice -->|Existing DB| InputDBStrings[User enters DB connection strings]
    InputDBStrings --> TestDBConnection[🔗 Test DB Connections]
    
    DBChoice -->|Skip| Step5[Step 5: Completion]
    
    TestDBConnection --> DBValid{DB Connection Valid?}
    
    DBValid -->|❌ Failed| ShowDBError[❌ Show Connection Error]
    ShowDBError --> RetryDB{Retry?}
    RetryDB -->|Yes| Step4
    RetryDB -->|No| Step5
    
    DBValid -->|✅ Success| RunMigrations[🔄 Run Database Migrations]
    RunMigrations --> Step5
    
    Step5 --> CreateMarker[📁 Create .installed file]
    CreateMarker --> StartServices[🚀 Start Services:<br/>pnpm run dev]
    
    StartServices --> ShowLinks[Display Access Links:<br/>Frontend: localhost:3000<br/>Backend: localhost:5000<br/>Docs: localhost:5000/api/docs]
    
    ShowLinks --> Countdown[⏱️ Auto-redirect in 5 seconds]
    Countdown --> RedirectComplete[Redirect to /dashboard]
    
    RedirectComplete --> End2([✅ Installation Complete])
    AbortInstall --> End3([❌ Installation Aborted])
    
    %% One-Time Access Protection
    note1[🔒 ONE-TIME ACCESS:<br/>Once .installed exists,<br/>/install routes redirect<br/>to /dashboard]
    
    %% Middleware Protection
    note2[🛡️ BACKEND MIDDLEWARE:<br/>checkInstallation.js<br/>blocks all API routes<br/>until installed]
    
    style Start fill:#6366f1,stroke:#4f46e5,stroke-width:3px,color:#fff
    style End1 fill:#10b981,stroke:#059669,stroke-width:3px,color:#fff
    style End2 fill:#10b981,stroke:#059669,stroke-width:3px,color:#fff
    style End3 fill:#ef4444,stroke:#dc2626,stroke-width:3px,color:#fff
    
    style Step1 fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:#fff
    style Step2 fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:#fff
    style Step3 fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:#fff
    style Step4 fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:#fff
    style Step5 fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:#fff
    
    style CheckInstall fill:#f59e0b,stroke:#d97706,stroke-width:2px
    style SystemValid fill:#f59e0b,stroke:#d97706,stroke-width:2px
    style ValidateConfig fill:#f59e0b,stroke:#d97706,stroke-width:2px
    style CheckPnpmAgain fill:#f59e0b,stroke:#d97706,stroke-width:2px
    style PnpmSuccess fill:#f59e0b,stroke:#d97706,stroke-width:2px
    style InstallSuccess fill:#f59e0b,stroke:#d97706,stroke-width:2px
    style DBValid fill:#f59e0b,stroke:#d97706,stroke-width:2px
    
    style ShowErrors fill:#ef4444,stroke:#dc2626,stroke-width:2px,color:#fff
    style ShowConfigError fill:#ef4444,stroke:#dc2626,stroke-width:2px,color:#fff
    style ShowPnpmError fill:#ef4444,stroke:#dc2626,stroke-width:2px,color:#fff
    style ShowInstError fill:#ef4444,stroke:#dc2626,stroke-width:2px,color:#fff
    style ShowDBError fill:#ef4444,stroke:#dc2626,stroke-width:2px,color:#fff
    
    style CreateMarker fill:#10b981,stroke:#059669,stroke-width:2px,color:#fff
    style StartServices fill:#10b981,stroke:#059669,stroke-width:2px,color:#fff
    
    style note1 fill:#fef3c7,stroke:#f59e0b,stroke-width:2px,color:#000
    style note2 fill:#fef3c7,stroke:#f59e0b,stroke-width:2px,color:#000
```

---

## Installation Wizard Components

### Frontend Pages Flow

```
/install
├── /system-check      ← Step 1: Auto-detect OS, Node, RAM, Disk, pnpm
├── /configuration     ← Step 2: Domain, Port, Token, Features
├── /dependencies      ← Step 3: Install pnpm + packages (WebSocket logs)
├── /database         ← Step 4: Docker Compose or existing DB
└── /complete         ← Step 5: Success + redirect to dashboard
```

### Backend API Endpoints

```
/api/install
├── GET  /check-status          → { installed: boolean, version: string }
├── GET  /system-info           → OS, Node, RAM, CPU, disk, pnpm status
├── POST /check-pnpm            → Check if pnpm is installed
├── POST /install-pnpm          → Install pnpm globally via npm
├── POST /install-dependencies  → Run pnpm install (with progress)
├── POST /install-playwright    → Install Playwright browsers
├── POST /generate-config       → Create .env file
├── POST /setup-databases       → Run docker-compose or test DB
├── POST /finalize              → Create .installed, start services
└── WS   /ws/install            → Real-time logs & progress
```

### Protection Logic

**Frontend (client/app/layout.tsx):**
```typescript
// On every page load:
if (!installed && !pathname.startsWith('/install')) {
  router.push('/install/system-check'); // Not installed → force install
}

if (installed && pathname.startsWith('/install')) {
  router.push('/dashboard'); // Already installed → block install page
}
```

**Backend (server/src/middleware/checkInstallation.js):**
```javascript
// Block all API routes except /api/install/* until installed
if (!fs.existsSync('.installed') && !req.path.startsWith('/api/install')) {
  return res.status(503).json({
    error: 'HeadlessX is not installed. Please complete installation first.',
    redirect: '/install/system-check'
  });
}
```

### Key Features

✅ **One-Time Only** - Installation page only accessible when NOT installed  
✅ **Auto-Detection** - Detects OS (Windows/Mac/Linux), Node.js, RAM, disk space  
✅ **pnpm-First** - Auto-installs pnpm if missing, uses it for all installations  
✅ **No Manual Scripts** - User clicks "Install" in browser, backend runs scripts  
✅ **Real-Time Progress** - WebSocket streams live logs and progress (0-100%)  
✅ **Error Recovery** - Retry buttons on failures, detailed error messages  
✅ **Cross-Platform** - Works on Windows (PowerShell), macOS, Linux (bash)  
✅ **Security** - CSRF protection, rate limiting, input validation  
✅ **Post-Install Protection** - Once installed, `/install` routes blocked forever  

### Installation Marker

**File:** `.installed`
```json
{
  "installed": true,
  "installedAt": "2025-10-19T14:30:00.000Z",
  "version": "2.0.0",
  "features": ["core", "ai", "proxy", "monitoring"],
  "config": {
    "backend_port": 5000,
    "frontend_port": 3000,
    "domain": "headlessx.example.com"
  }
}
```

Once this file exists:
- ❌ `/install/*` routes → **Redirect to `/dashboard`**
- ❌ All API routes → **Require authentication**
- ✅ Dashboard accessible
- ✅ Full functionality enabled
